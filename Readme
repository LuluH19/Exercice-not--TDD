## üß© **Examen ‚Äì D√©veloppement pilot√© par les tests (TDD)**

**Dur√©e :** 1 heure
**Total :** 100 points

---

### üß† **Partie 1 ‚Äì Compr√©hension rapide (15 points, ~10 min)**

**1.** En une ou deux phrases, expliquez le principe du TDD et ses trois √©tapes cl√©s. *(5 pts)*
consiste √† √©crire d'abord un test qui d√©crit le comportement attendu, puis √† impl√©menter juste assez de code pour faire passer ce test, et enfin √† refactorer le code. Les trois √©tapes cl√©s sont :

√âtape: 
- Red mettre un code faux, 
- Vert le code et bon, 
- Refactor am√©liore le code sans changer laforme 

**2.** Citez deux avantages concrets du TDD. *(5 pts)*
Deux avantages du TDD :

Meilleure couverture et s√©curit√© lors des changements et une meilleur lecture du code pour quelqu'un qui reprend le code √† la place de la personne qui l'a cr√©e


**3.** Quelle est la diff√©rence entre un fake et un stub ? Donnez un exemple rapide. *(5 pts)*

Un stud c'est une Stub objet simple qui renvoie des donn√©es pr√©d√©finies pour r√©pondre √† un appel de test, g√©n√©ralement utilis√© pour contr√¥ler les entr√©es d'une unit√© test√©e. 

Exemple : un stub de service de paiement qui retourne toujours ¬´ succ√®s ¬ª pour simuler un paiement r√©ussit

un Fake c'est une impl√©mentation plus compl√®te, simplifi√©e mais qui marche, utilis√©e en test en stockant des fausses informations

Exemple : une base de donn√©es en m√©moire (fake) qui stocke les objets dans une liste plut√¥t que d'utiliser une vraie base SQL.
---

### üíª **Partie 2 ‚Äì Cas pratique : gestion de panier e-commerce (85 points, ~50 min)**

#### **Contexte :**

Vous d√©veloppez un syst√®me qui permet d‚Äôajouter des produits et de calculer le total du panier.
Chaque produit a un nom et un prix. Le panier doit appliquer une **r√©duction de 10 %** si le total d√©passe **100 ‚Ç¨**.

---



#### **Objectif :**

Mettre en ≈ìuvre le cycle **TDD complet** pour cette fonctionnalit√©.

---


Le panier doit permettre :

- d‚Äôajouter des produits (nom + prix),
- de calculer le total du panier,
- d‚Äôappliquer une r√©duction de 10 % si le total d√©passe 100 ‚Ç¨,
- et de renvoyer un total exact dans tous les cas.

Vous devez produire :

1. Les tests unitaires n√©cessaires pour valider le comportement attendu.
2. Le code correspondant (impl√©mentation compl√®te et propre).
3. Un code final refactoris√©, lisible et coh√©rent.
4. Expliquez en quelques lignes comment vous int√©greriez ces tests dans un pipeline CI/CD.

---

### üßæ **Bar√®me r√©capitulatif**

| Partie    | Description             |  Points |
| :-------- | :---------------------- | :-----: |
| 1         | Compr√©hension rapide    |    15   |
| 2.1       | R√©daction des tests     |    25   |
| 2.2       | Impl√©mentation minimale |    25   |
| 2.3       | Refactoring             |    25   |
| 2.4       | Int√©gration continue    |    10   |
| **Total** |                         | **100** |






